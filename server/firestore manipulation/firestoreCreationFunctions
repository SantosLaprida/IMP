import { collection, deleteDoc, updateDoc, getDocs, query, where, doc, setDoc, getDoc, addDoc, getFirestore } from 'firebase/firestore';
import { auth, db } from './firebaseConfig';
import { createUserWithEmailAndPassword, signInWithEmailAndPassword, sendPasswordResetEmail } from 'firebase/auth';

const firestore = getFirestore();

export const createI_Players = async (tournamentId, start_date, finish_date, logo, players) => {
    if (!Array.isArray(players)) {
      throw new TypeError("The 'players' parameter must be an array");
    }
  
    // Create the I_Torneos document with the specified fields
    const tournamentRef = doc(firestore, 'I_Torneos', tournamentId);
    await setDoc(tournamentRef, {
      activo: 1,
      start_date: start_date,
      finish_date: finish_date,
      logo: logo
    });
  
    // Create the I_Players collection within the tournament document
    const collectionRef = collection(tournamentRef, 'I_Players');
  
    for (const player of players) {
      if (player.name && player.rank !== undefined) {
        const docRef = doc(collectionRef, player.name);
        await setDoc(docRef, {
          id_player: docRef.id,
          name: player.name,
          rank: player.rank,
        });
      } else {
        console.error('Invalid player object', player);
      }
    }
  };

  export default createI_Players;